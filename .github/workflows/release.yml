name: Release to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:  # 手動実行も可能にする

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: python -m build
    
    - name: Check package
      run: |
        twine check dist/*
        ls -la dist/
    
    # TestPyPIへの公開（オプション）
    - name: Publish to TestPyPI
      if: github.event_name == 'workflow_dispatch'  # 手動実行時のみ
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
      run: |
        twine upload --repository testpypi dist/*
      continue-on-error: true  # TestPyPIでエラーが出ても続行
    
    # 本番PyPIへの公開
    - name: Publish to PyPI
      if: github.event_name == 'release'  # リリース時のみ
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload dist/*

  # Windows用のホイール作成（llama-cpp-python用）
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    
    - name: Build package
      run: python -m build --wheel
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-windows-${{ matrix.python-version }}
        path: dist/*.whl

  # macOS用のホイール作成（Metal対応）
  build-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    
    - name: Build package
      run: python -m build --wheel
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-macos-${{ matrix.python-version }}
        path: dist/*.whl